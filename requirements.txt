# Dermalens - Skin Condition Analysis AI
# Complete requirements for the full-stack application

# =============================================================================
# BACKEND DEPENDENCIES (Python)
# =============================================================================

# Core ML/AI Framework
torch>=2.0.0
torchvision>=0.15.0
numpy>=1.24.0
opencv-python>=4.8.0

# Web Framework & API
fastapi==0.104.1
uvicorn[standard]==0.24.0
python-multipart==0.0.6

# Image Processing
Pillow>=10.0.0

# Data Science & ML
scikit-learn>=1.3.0
matplotlib>=3.7.0
seaborn>=0.12.0

# HTTP & Networking
requests>=2.31.0

# Environment & Configuration
python-dotenv>=1.0.0

# Additional ML Dependencies (for ultralytics compatibility)
polars>=0.20.0
psutil>=5.9.0
ultralytics-thop>=2.0.0

# =============================================================================
# FRONTEND DEPENDENCIES (Node.js)
# =============================================================================
# Note: Frontend dependencies are managed via package.json in the frontend/ folder
# Key frontend packages include:
# - Next.js 14.2.25
# - React 19.2.0
# - TypeScript
# - Tailwind CSS
# - Lucide React (icons)
# - Shadcn/ui components

# =============================================================================
# DEVELOPMENT & DEPLOYMENT
# =============================================================================

# Code Quality & Linting
black>=23.0.0
flake8>=6.0.0
mypy>=1.5.0

# Testing
pytest>=7.4.0
pytest-asyncio>=0.21.0

# Documentation
mkdocs>=1.5.0
mkdocs-material>=9.0.0

# =============================================================================
# OPTIONAL: CLOUD & DEPLOYMENT
# =============================================================================

# Cloud Storage (optional)
# boto3>=1.28.0  # AWS S3
# google-cloud-storage>=2.10.0  # Google Cloud Storage

# Containerization (optional)
# docker>=6.1.0

# =============================================================================
# INSTALLATION INSTRUCTIONS
# =============================================================================
# 
# 1. Backend Setup:
#    pip install -r requirements.txt
#    cd backend
#    python main.py
#
# 2. Frontend Setup:
#    cd frontend
#    npm install --legacy-peer-deps
#    npm run dev
#
# 3. Full Stack:
#    - Backend runs on http://localhost:8000
#    - Frontend runs on http://localhost:3000
#    - API documentation at http://localhost:8000/docs
#
# =============================================================================
